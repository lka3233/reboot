Задание 1.

На входе имеется {"C100_1-100", "C200_1-120-1200", "C300_1-120-30", "C400_1-80-20", "C100_2-50", "C200_2-40-1000", "C300_2-200-45", "C400_2-10-20", 
"C100_3-10", "C200_3-170-1100", "C300_3-150-29", "C400_3-100-28", "C100_1-300", "C200_1-100-750", "C300_1-32-15",}
C(CODE_CAR)_гос номер-Пробег-(доп. параметр)
CODE_CAR
100 - легковой авто 
200 - грузовой авто - объем перевезенного груза см. куб.
300 - пассажирский транспорт - число перевезенных пассажиров
400 - тяжелая техника(краны) - вес поднятых грузов тонн
Для каждого типа свой тип топлива:
100 - 46.10
300 - 47.50
200, 400 - 48.90
расход топлива
100 - 12.5
200 - 12
300 - 11.5
400 - 20
Необходимо:
- общую стоимость расходов на ГСМ, так и расходы на каждый класс авто
- тип авто имеющий наибольшую стоимость расходов
- тип авто имеющий наименьшую стоимость расходов
- реализовать функции которые в разрезе каждого типа авто выводят информацию о каждом авто (тип, номер, пробег, доп. параметр), с сортировкой по пробегу и доп параметру. 

Задание 2.
Необходимо реализовать класс в конструктор которого передается целочисленный массив.
Необходимо реализовать в данном классе следующие функции:
- добавление элемента в массив (в конец и в определенную позицию)
- функцию вывод количества элементов в массиве
- удаление элемента массива по индексу
- изменения значения по его индексу
- функция вывода на экран всего массива
- функцию сортировки массива (по возрастанию и убыванию без изменения исходного массива)
- функцию вывода максимального/минимального элемента
- функцию заполнения массива одинаковыми элементами

Задание 3.
Необходимо реализовать класс, который реализует структуру Связный список.

Задание 4.
Необходимо реализовать класс для калькулятора.
Минимальный набор функций:
- вычисление выражение
- возврат к последнему вычисленному выражению
- очистка значений всех выражений